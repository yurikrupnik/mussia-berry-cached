"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runOne = void 0;
const tslib_1 = require("tslib");
const run_command_1 = require("../tasks-runner/run-command");
const project_graph_1 = require("../core/project-graph");
const file_utils_1 = require("../core/file-utils");
const utils_1 = require("./utils");
const connect_to_nx_cloud_1 = require("./connect-to-nx-cloud");
const perf_hooks_1 = require("perf_hooks");
function runOne(opts) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        perf_hooks_1.performance.mark('command-execution-begins');
        perf_hooks_1.performance.measure('code-loading', 'init-local', 'command-execution-begins');
        const { nxArgs, overrides } = (0, utils_1.splitArgsIntoNxArgsAndOverrides)(Object.assign(Object.assign({}, opts.parsedArgs), { configuration: opts.configuration, target: opts.target }), 'run-one');
        yield (0, connect_to_nx_cloud_1.connectToNxCloudUsingScan)(nxArgs.scan);
        const projectGraph = yield (0, project_graph_1.createProjectGraphAsync)();
        const { projects } = getProjects(projectGraph, opts.project);
        const env = (0, file_utils_1.readEnvironment)();
        yield (0, run_command_1.runCommand)(projects, projectGraph, env, nxArgs, overrides, 'run-one', opts.project);
    });
}
exports.runOne = runOne;
function getProjects(projectGraph, project) {
    let projects = [projectGraph.nodes[project]];
    let projectsMap = {
        [project]: projectGraph.nodes[project],
    };
    return { projects, projectsMap };
}
//# sourceMappingURL=run-one.js.map